-- Внимание! Во всех результирующих выборках должны быть учтены все записи, даже
-- те, которые содержать NULL поля, однако, склейка не должна быть NULL записью!
-- Для этого используйте либо CASE, либо функцию 
-- ISNULL(<выражение>, <значение по умолчанию>) -- Microsoft SQL Server
-- IFNULL(<выражение>, <значение по умолчанию>) -- MySQL
-- COALESCE(<выражение>, <значение по умолчанию>) -- ANSI SQL (стандарт)
-- Соблюдать это условие достаточно для двух полей BIRTHDAY и UNIV_ID.
-- В качестве <значения по умолчания> используйте строку 'unknown'.

-- 1. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала один столбец типа varchar, содержащий последовательность разделенных 
--    символом ';' (точка с запятой) значений столбцов этой таблицы, и при этом 
--    текстовые значения должны отображаться прописными символами (верхний регистр), 
--    то есть быть представленными в следующем виде: 
--    1;КАБАНОВ;ВИТАЛИЙ;M;550;4;ХАРЬКОВ;01/12/1990;2.
--    ...
--    примечание: в выборку должны попасть студенты из любого города из 5 букв

SELECT UPPER(CAST(ID as varchar) + ';' + 
			SURNAME + ';' + 
			NAME + ';' + 
			GENDER + ';' + 
			CAST(CAST(STIPEND as DECIMAL(12,0)) as varchar) + ';' + 
			CAST(COURSE as varchar) + ';' + 
			CITY + ';' + 
			ISNULL(CONVERT(varchar, BIRTHDAY, 101), 'unknown') + ';' + 
			ISNULL(CAST(UNIV_ID as varchar), 'unknown'))
FROM STUDENTS
WHERE	LEN(CITY)=5;

--KSN исключила записи с пустыми значениями, а речь шла о замене пустых значений с помощью isnull(поле,значение замены). Получай максимум информации.

-- 2. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде: 
--    В.КАБАНОВ;местожительства-ХАРЬКОВ;родился-01.12.90
--    ...
--    примечание: в выборку должны попасть студенты, фамилия которых содержит вторую
--    букву 'е' и предпоследнюю букву 'и', либо же фамилия заканчивается на 'ц'

SELECT (UPPER(LEFT(NAME,1) + '.' +  
			SURNAME) + ';местожительства-' + 
			UPPER(CITY) + ';родился-' + 
			ISNULL(CONVERT(varchar, BIRTHDAY, 104), 'unknown')) as Comment 
  FROM STUDENTS
 WHERE	SURNAME like '_е%' AND 
		SURNAME like '%и_' OR 
		SURNAME like '%ц';
--KSN исключила записи с пустыми значениями, а речь шла о замене пустых значений с помощью isnull(поле,значение замены). Получай максимум информации.

-- 3. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    т.цилюрик;местожительства-Херсон; учится на IV курсе
--    ...
--    примечание: курс указать римскими цифрами (воспользуйтесь CASE), 
--    отобрать студентов, стипендия которых кратна 200

SELECT NAME, SURNAME,
		CASE
		WHEN COURSE=1 THEN LOWER(LEFT(NAME,1)) + '.' +  
					LOWER(SURNAME) + ';местожительства-' + 
					CITY + '; учится на ' + 'I курсе'
		WHEN COURSE=2 THEN LOWER(LEFT(NAME,1)) + '.' +  
					LOWER(SURNAME) + ';местожительства-' + 
					CITY + '; учится на ' + 'II курсе'
		WHEN COURSE=3 THEN LOWER(LEFT(NAME,1)) + '.' +  
					LOWER(SURNAME) + ';местожительства-' + 
					CITY + '; учится на ' + 'III курсе'
		WHEN COURSE=4 THEN LOWER(LEFT(NAME,1)) + '.' +  
					LOWER(SURNAME) + ';местожительства-' + 
					CITY + '; учится на ' + 'VI курсе'
		ELSE LOWER(LEFT(NAME,1)) + '.' +  
					LOWER(SURNAME) + ';местожительства-' + 
					CITY + '; учится на ' + 'V курсе'
		END KURS_CHAR
  FROM STUDENTS
 WHERE STIPEND %200=0;
--KSN Все верно

-- 4. Составьте запрос для таблицы STUDENT таким образом, чтобы выборка 
--    содержала столбец в следующем виде:
--     Нина Федосеева из г.Днепропетровск родилась в 1992 году
--     ...
--     Дмитрий Коваленко из г.Хмельницкий родился в 1993 году
--     ...
--     примечание: для всех городов, в которых более 8 букв

SELECT 
		CASE 
		WHEN GENDER='f' THEN NAME + ' ' + SURNAME + ' из г.' + CITY + ' родилась в ' + CAST(YEAR(ISNULL(BIRTHDAY, 0))as varchar) + ' году'
		ELSE NAME + ' ' + SURNAME + ' из г.' + CITY + ' родился в ' + ISNULL(CAST(YEAR(BIRTHDAY) as varchar), 'unknown') + ' году'
		END COMMENT
  FROM STUDENTS
 WHERE LEN(CITY)>8;
--KSN поленилась писать проверку на null значения


-- 5. Вывести фамилии, имена студентов и величину получаемых ими стипендий, 
--    при этом значения стипендий первокурсников должны быть увеличены на 17.5%

SELECT SURNAME, NAME,
		CASE
		WHEN COURSE=1 THEN STIPEND + (STIPEND*0.175)
		ELSE STIPEND
		END STIP
FROM STUDENTS;
--KSN Все верно

-- 6. Вывести наименования всех учебных заведений и их расстояния 
--    (придумать/нагуглить/взять на глаз) до Киева.

SELECT NAME,
		CASE
		WHEN NAME='КПИ' THEN '0' + ' км'
		WHEN NAME='КНУ' THEN '0' + ' км'
		WHEN NAME='ЛПУ' THEN '613' + ' км'
		WHEN NAME='КМА' THEN '0' + ' км'
		WHEN NAME='ЛГУ' THEN '540' + ' км'
		WHEN NAME='ХАИ' THEN '478' + ' км'
		WHEN NAME='ДПИ' THEN '477' + ' км'
		WHEN NAME='ДНТУ' THEN '713' + ' км'
		WHEN NAME='ХНАДУ' THEN '478' + ' км'
		WHEN NAME='ОНПУ' THEN '474' + ' км'
		WHEN NAME='КНУСА' THEN '0' + ' км'
		WHEN NAME='ТНТУ' THEN '420' + ' км'
		WHEN NAME='ЗДИА' THEN '556' + ' км'
		WHEN NAME='БНАУ' THEN '86' + ' км'
		ELSE '546' + ' км'
		END DISTANCE
  FROM UNIVERSITIES;
--KSN Все верно

-- 7. Вывести все учебные заведения и их две последние цифры рейтинга.

SELECT NAME, RIGHT(RATING, 2) as Comment
  FROM UNIVERSITIES;


-- 8. Составьте запрос для таблицы UNIVERSITY таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    Код-1;КПИ-г.Киев;Рейтинг относительно ДНТУ(501) +756
--    ...
--    Код-11;КНУСА-г.Киев;рейтинг относительно ДНТУ(501) -18
--    ...
--    примечание: рейтинг вычислить относительно ДНТУшного, а также должен 
--    присутствовать знак (+/-), рейтинг ДНТУ заранее известен = 501

SELECT
		CASE 
		WHEN RATING>501 THEN 'Код-' + CAST(ID as varchar) + ';' + NAME + '-г.' + CITY + ';' + 'Рейтинг относительно ДНТУ(501) + ' + CAST((RATING-501) as varchar)
		WHEN RATING<501 THEN 'Код-' + CAST(ID as varchar) + ';' + NAME + '-г.' + CITY + ';' + 'Рейтинг относительно ДНТУ(501) - ' + CAST((501 - RATING) as varchar)
		ELSE 'Код-' + CAST(ID as varchar) + ';' + NAME + '-г.' + CITY + ';' + 'Рейтинг относительно ДНТУ(501) = ' + CAST((501 - RATING) as varchar)
		END as Comment
FROM UNIVERSITIES;
--KSN Все верно

-- 9. Составьте запрос для таблицы UNIVERSITY таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    Код-1;КПИ-г.Киев;рейтинг состоит из 12 сотен
--    Код-2;КНУ-г.Киев;рейтинг состоит из 6 сотен
--    ...
--    примечание: в рейтинге необходимо указать кол-во сотен

SELECT RATING, 'Код-' + CAST(ID as varchar) + ';' + NAME + '-г.' + CITY + ';' + 'рейтинг состоит из ' + SUBSTRING(CAST(FORMAT(RATING, '0000') as varchar),1,	2) + ' сотен'
FROM UNIVERSITIES;

SELECT RATING, 'Код-' + CAST(ID as varchar) + ';' + NAME + '-г.' + CITY + ';' + 'рейтинг состоит из ' + CAST(RATING/100 as varchar ) + ' сотен' as Comment
FROM UNIVERSITIES;

--KSN прошу использовать уже изученные функции FORMAT к ним не относится, как получить сотни простым методом деления?